#функция
#include <vector>

std::vector<int> increaseVector(const std::vector<int>& vector, int n) {
    std::vector<int> result;
    for (int i = 0; i < vector.size(); ++i) {
        result.push_back(vector[i] + n);
    }
    return result;
}
#ример теста для этой функции с использованием библиотеки Google Test
#include <gtest/gtest.h>
#include "your_vector_functions.h"

TEST(IncreaseVectorTest, BasicTest) {
    std::vector<int> input = {1, 2, 3};
    std::vector<int> expected = {6, 7, 8};
    ASSERT_EQ(increaseVector(input, 5), expected);
}

TEST(IncreaseVectorTest, EmptyVectorTest) {
    std::vector<int> input;
    std::vector<int> expected;
    ASSERT_EQ(increaseVector(input, 10), expected);
}

int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}


